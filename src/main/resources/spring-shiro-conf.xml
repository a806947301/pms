<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

	<!--shiro过滤器-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
		<property name="loginUrl" value="/user/loginPage"/>
		<property name="successUrl" value="/home"/>
		<property name="unauthorizedUrl" value="/unauthorized.html"/>
		<!--配置拦截链-->
		<property name="filterChainDefinitions">
			<value>
				#不拦截静态资源
				/css/** = anon
				/fonts/** = anon
				/js/** = anon
				/vendor/** = anon
				#不拦截登陆、注册
				/user/loginPage = anon
				/user/login = anon
				/user/registerPage = anon
				#不拦截注册页面所需url
				/department/finfAllDepartment = anon
				/user/getVerification = anon
				/user/existEmail = anon
				/user/register = anon
				#不拦截异常
				/exception/* = anon
				#其他资源需要登陆
				/** = authc
			</value>
		</property>
	</bean>
	<!--shiro安全管理器-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authRealm" />
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<!--自定义realm-->
	<bean id="authRealm" class="com.dayi.demo.common.shiro.realm.AuthRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
				<property name="hashIterations" value="2"></property> <!-- 配置加密的次数 -->
			</bean>
		</property>
	</bean>

	<!--扫描shiro权限注解-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		  depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>



</beans>
