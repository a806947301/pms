<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayi.demo.user.dao.UserDao">
    <resultMap id="userResultMap" type="User">
        <id property="id" column="id"></id>
        <result property="addTime" column="addtime"></result>
        <result property="updateTime" column="updatetime"></result>
        <result property="name" column="name"></result>
        <result property="jobNumber" column="job_number"></result>
        <result property="email" column="email"></result>
        <result property="password" column="password"></result>
        <result property="stopped" column="is_stopped"></result>
        <association property="department" column="department_id" select="com.dayi.demo.user.dao.DepartmentDao.get" />
    </resultMap>

    <sql id="selectAllColumnUser">
        SELECT user.id, user.addtime, user.updatetime, user.name, user.department_id,
        user.job_number, user.email, user.password, user.is_stopped FROM
    </sql>

    <!--查询所有（包含停用）-->
    <select id="findAllIncludeStopped" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user ORDER BY addtime
    </select>

    <!-- 查询所有(但不包含已停用的) -->
    <select id="findAll" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user WHERE is_stopped = 0  ORDER BY addtime
    </select>

    <!--根据用户角色表查询用户-->
    <select id="findUserByUserRole" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user JOIN user_role ON user.id = user_role.user_id
        WHERE TRUE
        <if test="null != userId">AND user.id = #{userId}</if>
        <if test="null != roleId">AND role_id = #{roleId}</if>
        ORDER BY user.addtime
    </select>

    <!--查询产品下指定角色的用户-->
    <select id="findUserByproductIdRole" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user JOIN user_role ON user.id = user_role.user_id
        JOIN product_member AS pm ON user.id = pm.user_id
        WHERE pm.product_id = #{productId} AND user_role.role_id = #{roleId}
    </select>

    <!-- 根据产品名查用户 -->
    <select id="findUserByProductId" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user JOIN product_member pm on user.id =  pm.user_id WHERE product_id = #{0} AND is_stopped = 0 ORDER BY addtime
    </select>

    <!-- 获取指定的产品参与者 -->
    <select id="getProductUser" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user JOIN product_member pm on user.id =  pm.user_id WHERE product_id = #{productId} AND is_stopped = 0
        AND user_id = #{userId} ORDER BY addtime
    </select>

    <!--根据用户id获取用户-->
    <select id="get" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user WHERE id = #{0}
    </select>

    <!--根据邮箱获取用户-->
    <select id="getByEmail" resultMap="userResultMap">
        <include refid="selectAllColumnUser"/>
        user WHERE email = #{0} AND is_stopped = 0
    </select>

    <select id="countDepartmentId" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM user WHERE department_id = #{0}
    </select>

    <insert id="add">
        INSERT  INTO user (id, addtime, updatetime, name, department_id, job_number, email, password)
        VALUES (#{id} ,#{addTime}, #{updateTime}, #{name}, #{department.id}, #{jobNumber}, #{email}, #{password})
    </insert>

    <update id="update">
        UPDATE user
        <set>
            <if test="null != stopped">is_stopped = #{stopped},</if>
            <if test="null != name">name = #{name},</if>
            <if test="null != department and null != department.id">department_id = #{department.id},</if>
            <if test="null != jobNumber">job_number = #{jobNumber},</if>
            <if test="null != email">email = #{email},</if>
            <if test="null != updateTime">updatetime = #{updateTime}</if>
        </set>
        WHERE id = #{id}
    </update>
</mapper>